%% Initialization

close all
clear
clc

%% Inputing and converting the Data to .mat
read_and_convert_tdms = 0; 
load('dms_calib.mat')


%% Delta 5
folder  = './Delta5/';

if read_and_convert_tdms == 1
    file_type = '*.tdms';
else
    file_type = '*.mat';    
end
%Exp = {'Exp1' , 'Exp2', 'Exp3' , 'Exp4', 'Exp5'}; % Experiments number
nameFiles = dir(strcat(folder,file_type));
files_delta5 = {nameFiles.name}; 


for i=1:size(files_delta5,2)
    
    file{i} = strcat(folder,files_delta5{:,i});   
    if read_and_convert_tdms == 1;
        matFileName=simpleConvertTDMS(file{i});  
        DATA_d5(i) = load(cell2mat(matFileName));
    else
        DATA_d5(i) = load(file{i});   
    end
    p = files_delta5{:,i}(13:end-4);
    p =cellstr(p);  
end

clc
%% Delta 10 


folder  = './Delta10/';

if read_and_convert_tdms == 1
    file_type = '*.tdms';
else
    file_type = '*.mat';    
end
nameFiles = dir(strcat(folder,file_type));
files_delta10 = {nameFiles.name}; 




for i=1:size(files_delta10,2)
    
    file{i} = strcat(folder,files_delta10{:,i});   
    if read_and_convert_tdms == 1;
        matFileName=simpleConvertTDMS(file{i});  
        DATA_d10(i) = load(cell2mat(matFileName));
    else
        DATA_d10(i) = load(file{i});   
    end
    p = files_delta10{:,i}(13:end-4);
    p =cellstr(p);  
end



clc
%% Constants

Fs = 10^4;      % Sampling frequency 10 KHz
Ts = 1/Fs;      % Sampling period

r_speed = 3;    % Rotational speed of the turbine in Hz


 
 
%% Filtering Data


  [Estimation_Data_d5, Validation_Data_d5] = filtering(DATA_d5, Fs, r_speed);

  [Data_d10] = filtering_d10(DATA_d10, Fs, r_speed);




%% Delay estimation
% 
  d = merge(Validation_Data_d5(4).iddata,Validation_Data_d5(2).iddata,Estimation_Data_d5(1).iddata,Estimation_Data_d5(3).iddata);
  
  d2 = merge(Estimation_Data_d5(4).iddata,Estimation_Data_d5(2).iddata,Validation_Data_d5(1).iddata,Validation_Data_d5(3).iddata); 
  
  v = Data_d10(4).iddata;
  v2 = Data_d10(2).iddata;
  
  
%% System identification

% Tranfer Function models
% 
% model = tfest(d2,1,0);
% model2 = tfest(d2,2,1);


% ARMAX MODELS
opt = armaxOptions;
opt.Regularization.Lambda = 1;
m = armax(d,[2 2 2 1],opt);

opt1 = armaxOptions('Focus','simulation');
m1 = armax(d,[2 2 2 1],opt1);
m2 = armax(d2,[2 2 2 1],opt1);

opt2 = armaxOptions;
opt2.Focus = 'simulation';
opt2.SearchMethod = 'lm';
opt2.SearchOption.MaxIter = 10;
opt2.Display = 'on';
sys = armax(d,[2 2 2 1],opt2);
sys2 = armax(d2,[2 2 2 1],opt2);


% compare(v,m,m1,sys)
% compare(v2,m2,sys2)

z = iddata(DATA_d5(7).crio_databendflapblade3DMS02.Data *   -8.212171639296294e+05 + -1.973389124055448e+02,DATA_d5(7).crio_dataservo1setpointAI313.Data * -0.068965517241379 + 98.965517241379300, Ts);
z = detrend(z);
plot(z)


compare(z,model,model2,m2,sys2)
